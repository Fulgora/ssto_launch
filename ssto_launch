CLEARSCREEN.
PRINT " ".
PRINT "**************************************************".
PRINT "**                                              **".
PRINT "**                                              **".
PRINT "**            SSTO Launch-script v0.1           **".
PRINT "**                                              **".
PRINT "**                                              **".
PRINT "**               (c) Fulgora 2016               **".
PRINT "**                License: GPLv3                **".
PRINT "**                                              **".
PRINT "**    https://github.com/Fulgora/ssto_launch    **".
PRINT "**************************************************".
PRINT " ".
PRINT " ".

// ******************************************************************** //
// ********************** VARIABLE-DECLARATIONS *********************** //
// ******************************************************************** //

// Enable/Disable engine pre-heating
SET engine_preheating TO True.

// Runway takeoff in m/s
SET takeoff_speed TO 130.

// Target altitude in m to gain speed (must be above 1500m!)
SET target_altitude TO 10000.

// Target maximum speed in m/s at the altitude defined above
SET target_speed TO 1200.

// Maximum target apoapsis height
SET max_apoapsis TO 100000.

// Minimum target periapsis height
SET min_periapsis TO 71000.

// ******************************************************************** //
// *** SCRIPT - DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING ;) *** //
// ******************************************************************** //


PRINT "Initiating launch.".

PRINT " ".

SET airborn TO 80.
SET safe_alt TO 1500.

IF engine_preheating {
    BRAKES ON.
}

// Countdown
PRINT "IGNITION IN... T-".
FROM {local countdown is 10.} UNTIL countdown = 0 STEP {SET countdown to countdown - 1.} DO {
    PRINT countdown + " " AT (17,16).
    WAIT 1. // pauses the script here for 1 second.
}
PRINT 0 + " " AT (17,16).
WAIT 0.2.

// Let's roll

LOCK THROTTLE TO 1.0.
PRINT " ".
PRINT "*** IGNITION ***".
PRINT " ".
STAGE.

IF engine_preheating {
    // Pre-heating engines
    WAIT 10.
    BRAKES OFF.
}


// Waiting for takeoff speed and configuring steering
WAIT UNTIL SHIP:VELOCITY:SURFACE:MAG > takeoff_speed.
PRINT "Takeoff.".
//SET DEFAULT_PITCH TO North + R(30,90,-90).
SET DEFAULT_PITCH TO HEADING(90, 30).

// Trying to get off the runway
//SET SHIP:CONTROL:PITCH TO 1.0.
LOCK STEERING TO HEADING(90, 15).

UNTIL SHIP:ALTITUDE > airborn {
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}
GEAR OFF.

// Disable nukes
TOGGLE AG4.

PRINT "Starting to gradually adjust pitch from 15.0 to 25".

SET start_alt TO SHIP:ALTITUDE.
UNTIL SHIP:ALTITUDE > safe_alt {
    SET distance_to_ground TO (SHIP:ALTITUDE - start_alt).
    SET temp TO distance_to_ground / (safe_alt - start_alt).
    LOCK STEERING TO HEADING(90, 15 + (10 * temp)).
    PRINT ROUND(15 + (10 * temp),1) AT (40,21).
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}

// Waiting until we reach our 'travel-altitude' and lock steering to horizon
UNTIL SHIP:ALTITUDE > target_altitude {
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}
PRINT " ".
PRINT "Target altitude of " + target_altitude + "m reached.".
PRINT "Pitching down to gain speed.".
PRINT "Please fasten your seatbelts!".
PRINT " ".
LOCK STEERING TO HEADING(90, 5).


// Wait until we reach the maximum athmospheric speed the SSTO can handle
UNTIL SHIP:VELOCITY:SURFACE:MAG > target_speed {
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}
PRINT " ".
PRINT "Target speed of " + target_speed + "m/s reached.".
PRINT "Pitching back up.".

// After that we will slowly pitch back up to 90,25
SET safe_alt TO target_altitude + 5000.
SET start_alt TO SHIP:ALTITUDE.
UNTIL SHIP:ALTITUDE > safe_alt {
    SET distance_to_ground TO (SHIP:ALTITUDE - start_alt).
    SET temp TO distance_to_ground / (safe_alt - start_alt).
    LOCK STEERING TO HEADING(90, 5 + (20 * temp)).
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}

// Wait until we run out of air and toggle engine modes (and close air intakes)
UNTIL SHIP:ALTITUDE > 26500 {
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}

PRINT " ".
PRINT "Activating nuclear engines.".
PRINT "Switching to closed cycle.".
PRINT "Closing air-intakes.".
TOGGLE AG4.
TOGGLE AG3.
TOGGLE AG2.

// Wait until we are positiv that we can make orbit - disable rocket engines
UNTIL SHIP:APOAPSIS > 70000 {
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
}

// Switching the Rapier back to airbreathing. Since intakes are closed this effectively shuts them down
// If you can't make orbit move the 'TOGGLE AG3.' to line 156
// If you can't make orbit after moving the line below comment out the line 'LOCK STEERING TO SHIP:PROGRADE.' (or delete everything below and fly manual from here)
// This will be less efficient but gives you moar power and lets face it - efficeny is useless if we cant make orbit amirite?
TOGGLE AG3.

PRINT " ".
PRINT "Suborbital trajectory established.".
PRINT "Pitching prograde.".
LOCK STEERING TO SHIP:PROGRADE.

// Wait until we are safely in orbit. Circularize is currently not supported... might add that later though
SET last_warp TO 0.
SET apo_peri_distance TO ETA:APOAPSIS - SHIP:PERIAPSIS.
//UNTIL (SHIP:APOAPSIS > 100000 OR apo_peri_distance < 500 OR (ETA:APOAPSIS - SHIP:PERIAPSIS > apo_peri_distance AND SHIP:PERIAPSIS > 72000) OR SHIP:CONTROL:PILOTMAINTHROTTLE = 0) {
UNTIL (SHIP:APOAPSIS > max_apoapsis OR SHIP:PERIAPSIS > min_periapsis OR SHIP:CONTROL:PILOTMAINTHROTTLE = 0) {
    SET tmp_eta_apoapsis TO ETA:APOAPSIS.
    SET apo_peri_distance TO ETA:APOAPSIS - SHIP:PERIAPSIS.
    WAIT 0.1. // just trying not to fry your actual (physical) CPU
    IF (SHIP:PERIAPSIS > min_periapsis AND ETA:APOAPSIS > 180 AND tmp_eta_apoapsis < ETA:APOAPSIS AND (last_warp = 0 OR last_warp < TIME - 30)) {
        AG4 OFF.
        WARPTO(ETA:APOAPSIS).
        AG4 ON.
    }
}

SAS ON.
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.

CLEARSCREEN.

PRINT "**************************************************".
PRINT "**                                              **".
IF SHIP:PERIAPSIS > 70000 {
    PRINT "**            >>> Orbit achieved <<<            **".
    //PRINT "**                                              **".
    IF apo_peri_distance > 1000 {
        PRINT "**          Please circularise on your own         **".
        //PRINT "**                                              **".
    }
    PRINT "**                                              **".
}
IF SHIP:APOAPSIS > max_apoapsis {
    PRINT "**       Target maximum apoapsis reached        **".
    //PRINT "**                                              **".
}

IF SHIP:PERIAPSIS < 70000 {
    PRINT "**                                              **".
    PRINT "**        >>> COULD NOT REACH ORBIT <<<         **".
    PRINT "**                                              **".
}

PRINT "**                                              **".
PRINT "**                                              **".
PRINT "**                                              **".
PRINT "**           Transferring control back          **".
PRINT "**                                              **".
PRINT "**  I hope you had a pleasent flight (so far)   **".
PRINT "**                     :D                       **".
PRINT "**                      _                       **".
PRINT "**                     / \                      **".
PRINT "**                    |.-.|                     **".
PRINT "**                    |   |                     **".
PRINT "**                    |   |                     **".
PRINT "**                    |   |                     **".
PRINT "**                  _ | F | _                   **".
PRINT "**                 / \| U |/ \                  **".
PRINT "**                |   | L |   |                 **".
PRINT "**                |   | G |   |                 **".
PRINT "**               ,'   | O |   '.                **".
PRINT "**             ,' |   | R |   | `.              **".
PRINT "**           .'___|___|_A_|___|___'.            **".
PRINT "**                 /_\ /_\ /_\                  **".
PRINT "**           SSTO Launch-script v0.1            **".
PRINT "**                                              **".
PRINT "**    https://github.com/Fulgora/ssto_launch    **".
PRINT "**************************************************".
PRINT " ".
